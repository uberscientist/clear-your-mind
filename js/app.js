// Generated by CoffeeScript 1.3.3
(function() {
  var bubblage, bubbleLayer, bubbles, checkPass, createWorm, dance, danceType, emitterActive, endRound, getRand, i, menuAnimation, msgArray, once, randJakeFloat, randumb, round, score, setupMenu, snailCount, stage, startKinetic, startRound, wormBirth, wormDance, wormEmitter, wormRate;

  jQuery.ready = function() {
    menuAnimation();
    setupMenu();
    $('#loading').fadeOut(1000);
    $('img').live('dragstart', function(e) {
      return e.preventDefault();
    });
    $('#go-menu').live('click', function() {
      var mesgDiv;
      mesgDiv = $('div#message');
      mesgDiv.fadeOut(200);
      $('body').css('background-image', 'none');
      $('body').css({
        'background-color': '#4EA0F8'
      });
      $('span.menu-option').hide();
      $('div#menu').show();
      return menuAnimation();
    });
    return $('#password-text').keydown(function(e) {
      var pass;
      if (e.keyCode === 13) {
        pass = $('#password-text').val();
        return checkPass(pass);
      }
    });
  };

  window.message = function(title, text, dur) {
    var mesgDiv, windowW;
    windowW = $(window).width();
    mesgDiv = $('div#message');
    mesgDiv.css({
      'top': 20,
      'left': .5 * windowW - 310,
      'z-index': 10
    });
    mesgDiv.stop();
    if (dur === -1) {
      return mesgDiv.html("<h2>" + title + "</h2><br/>" + text).slideDown(100).append("<br/><input id='go-menu' type='button' value='main menu'/>");
    } else {
      mesgDiv.html("<h2>" + title + "</h2><br/>" + text).slideDown(100).delay(dur * 1000).fadeOut(200);
      return mesgDiv.click(function() {
        return mesgDiv.stop().fadeOut(300);
      });
    }
  };

  menuAnimation = function() {
    var jake, jakeH, jakeRatio, jakeW, windowH, windowW;
    windowH = $(window).height();
    windowW = $(window).width();
    jake = $('#sitting-jake');
    jakeW = 450;
    jakeH = 280;
    jakeRatio = jakeH / jakeW;
    jake.css({
      'width': windowW * .5,
      'height': jakeRatio * windowW * .5,
      'top': windowH,
      'left': (windowW / 2) - jakeW * .5
    });
    return jake.animate({
      'top': (windowH / 2) - jakeH * .7
    }, 1000, function() {
      var jakePos;
      jakePos = jake.position();
      jakeW = jake.width();
      jakeH = jake.height();
      jakeRatio = jakeH / jakeW;
      $('span#menu-newgame').css({
        'left': jakePos.left - jakeW * .2,
        'top': jakePos.top + jakeH * .1
      });
      $('span#menu-password').css({
        'left': jakePos.left + jakeW * .7,
        'top': jakePos.top + jakeH * .1
      });
      $('span#menu-info').css({
        'left': jakePos.left + jakeW * .13,
        'top': jakePos.top - jakeH * .1
      });
      return $('span.menu-option').fadeIn(800);
    });
  };

  checkPass = function(pass) {
    switch (pass) {
      case "pits":
        return window.startPits();
      case "satori":
        return window.enterSatori();
      default:
        return alert('Wrong Password');
    }
  };

  setupMenu = function() {
    var infoDiv, passwordDiv;
    passwordDiv = $('div#password-div');
    infoDiv = $('div#info');
    $('span.menu-option').hover(function() {
      $('audio#zap').trigger('play');
      return $(this).css({
        'cursor': 'pointer',
        'font-size': '2.5em'
      });
    }, function() {
      return $(this).css({
        'font-size': '2em'
      });
    });
    $('span#menu-newgame').click(function() {
      var windowH, windowW;
      windowH = $(window).height();
      windowW = $(window).width();
      return $('div#menu').fadeOut(500, function() {
        var jake, jakeH, jakeRatio, jakeW;
        jake = $('#sitting-jake');
        jakeW = jake.width();
        jakeH = jake.height();
        jakeRatio = jakeH / jakeW;
        return jake.animate({
          'top': 0,
          'left': 0,
          'width': windowW * 2,
          'height': windowW * 2 * jakeRatio
        }, 1000, function() {
          $('body').css({
            'background-color': '#13020C'
          });
          return jake.animate({
            'top': windowH - (jakeRatio * windowW / 3),
            'left': windowW / 2 - (windowW / 4),
            'width': windowW / 8,
            'height': jakeRatio * windowW / 8
          }, 1000, function() {
            return window.startGame();
          });
        });
      });
    });
    $('span#menu-password').click(function() {
      var passwordText;
      passwordDiv.css('z-index', '10');
      passwordText = $('input#password-text');
      passwordText.val('');
      return passwordDiv.slideDown(200, function() {
        return passwordText.focus();
      });
    });
    $('span#menu-info').click(function() {
      return infoDiv.slideDown(200);
    });
    $('input#password-nope').click(function() {
      return passwordDiv.slideUp(200);
    });
    $('input#password-button').click(function() {
      var pass;
      pass = $('#password-text').val();
      return checkPass(pass);
    });
    return $('input#close-info').click(function() {
      return infoDiv.slideUp(200);
    });
  };

  i = 0;

  score = 0;

  wormRate = 5000;

  round = 1;

  wormBirth = false;

  once = true;

  emitterActive = false;

  wormEmitter = function(x, y, num) {
    var w;
    self.wormNum = num * 9;
    emitterActive = true;
    return w = self.setInterval(function() {
      i++;
      self.wormNum--;
      if (self.wormNum <= 0) {
        clearInterval(w);
        return emitterActive = false;
      } else if (round < 6) {
        return createWorm(x, y, i);
      }
    }, wormRate);
  };

  createWorm = function(x, y, i) {
    var dir, dirOffset, jake, jakeH, jakePos, jakeW, sprite, windowH, windowW;
    windowH = $(window).height();
    windowW = $(window).width();
    jake = $('#sitting-jake');
    jakePos = jake.position();
    jakeW = jake.width();
    jakeH = jake.height();
    dir = x > windowW / 2 ? 'l' : 'r';
    if (x > windowW / 2) {
      x += 100;
      dirOffset = jakeW * .7;
    } else {
      x -= 100;
      dirOffset = -1 * jakeW * .7;
    }
    sprite = "imgs/worm_crawl_" + dir + ".gif";
    return setTimeout(function() {
      var worm;
      $("body").append("<img id='" + i + "' class='worm' src='" + sprite + "' />");
      wormBirth = true;
      worm = $("#" + i);
      worm.css({
        'left': x
      }, {
        'top': y
      });
      worm.animate({
        'left': jakePos.left + dirOffset,
        'top': jakePos.top + .1 * jakeH
      }, (Math.random() * 6000 + 5500) - round * 600, 'linear', function() {
        var scoreSpan;
        worm.attr('src', "imgs/worm_bite_" + dir + ".gif");
        $('audio#worm-wowow').trigger('play');
        $("body").append("<span id='score-" + i + "' class='score'>-20</span>");
        score -= 20;
        $('#score-display').html(score);
        scoreSpan = $("#score-" + i);
        scoreSpan.css({
          'color': 'red',
          'top': jakePos.top - 50,
          'left': jakePos.left + 20,
          'z-index': -i - 5
        });
        worm.fadeOut(900, function() {
          return worm.remove();
        });
        return scoreSpan.fadeOut(900, function() {
          return scoreSpan.remove();
        });
      });
      return worm.mousedown(function(e) {
        var scoreSpan;
        worm.unbind('mousedown');
        $('audio#zap').trigger('play');
        worm.stop().attr('src', "imgs/worm_stand_" + dir + ".gif");
        worm.css({
          'z-index': -i
        });
        if (!($("#score-" + i).length > 0)) {
          $("body").append("<span id='score-" + i + "' class='score'>+10</span>");
        }
        score += 10;
        $('#score-display').html(score);
        scoreSpan = $("#score-" + i);
        scoreSpan.css({
          'top': e.pageY - 50,
          'left': e.pageX
        });
        worm.fadeOut(500, function() {
          return worm.remove();
        });
        return scoreSpan.animate({
          'top': '20px'
        }, 200).fadeOut(800, function() {
          return scoreSpan.remove();
        });
      });
    }, Math.random() * 500 + 2000);
  };

  startRound = function() {
    var check, windowH, windowW;
    windowH = $(window).height();
    windowW = $(window).width();
    wormEmitter(windowW, 0, round);
    wormEmitter(0, 0, round);
    $('audio#worm-loop').trigger('play');
    if (!(round > 5)) {
      $("audio#kw-taunt-" + round).trigger('play');
    }
    clearInterval(check);
    return check = setInterval(function() {
      if (score < 0) {
        $('#score-display').css('color', 'red');
      } else {
        $('#score-display').css('color', '#35B94D');
      }
      if (round === 6) {
        endRound();
        once = false;
        return clearInterval(check);
      } else if ($('.worm').length === 0 && wormBirth === true && !emitterActive) {
        $('audio#worm-loop').trigger('pause');
        round++;
        if (!(round > 5)) {
          message("Round " + round, '', 3);
        }
        wormRate -= 1000;
        wormBirth = false;
        return startRound();
      }
    }, 1000);
  };

  endRound = function() {
    var finalMsg;
    if (once) {
      wormBirth = false;
      $('audio').trigger('pause');
      $('#score-display').remove();
      $('audio#menu-loop').trigger('play');
      finalMsg = "Your score of " + score + " ";
      finalMsg += score > 1000 ? "is good, the password is `pits`" : "needs improvement to get the password buddy.";
      if (score < 0) {
        finalMsg += "  You didn't even try did you?";
      }
      return message("Final Score: " + score, finalMsg, -1);
    }
  };

  window.startGame = function() {
    i = 0;
    score = 0;
    wormRate = 5000;
    round = 1;
    wormBirth = false;
    once = true;
    emitterActive = false;
    $('audio#menu-loop').trigger('pause');
    $('audio#wormlevel-music').trigger('play');
    startRound();
    message("Round " + round, 'Click on the wittle wormies to zap them from your consciousness', 7);
    return $('body').css({
      'background-image': 'url(\'imgs/kingworm.svg\')',
      'background-repeat': 'no-repeat',
      'background-position': 'center',
      'background-attachment': 'fixed'
    });
  };

  $('body').append("<div id='score-display'></div>");

  window.startPits = function() {
    message("Hi!", "My pits stink and are full of snails, please grab that soap and help me scrub them squeaky clean!", 14);
    $('audio').trigger('pause');
    $('audio#pits-loop').trigger('play');
    $('div#password-div').slideUp(100);
    $('div#menu').fadeOut(100);
    $('img#sitting-jake').animate({
      'width': 0,
      'height': 0
    }, function() {
      return $(self).hide();
    });
    $('div#pits').show();
    return startKinetic();
  };

  stage = null;

  snailCount = 0;

  bubblage = 0;

  randumb = function(range) {
    var rand;
    return rand = (-1 * Math.round(Math.random())) * (Math.random() * range);
  };

  startKinetic = function() {
    var background, images, jakeImg, soapImg;
    stage = new Kinetic.Stage({
      container: 'pits',
      width: 600,
      height: 600
    });
    images = new Kinetic.Layer();
    background = new Kinetic.Layer();
    jakeImg = new Image();
    soapImg = new Image();
    soapImg.onload = function() {
      var soap;
      soap = new Kinetic.Image({
        draggable: true,
        x: 50,
        y: 400,
        image: soapImg,
        width: 150,
        height: 120
      });
      images.add(soap);
      images.draw();
      soap.on('dragstart', function(e) {
        return $('audio#pit-wash').trigger('play');
      });
      soap.on('dragend', function(e) {
        return $('audio#pit-wash').trigger('pause');
      });
      return soap.on('dragmove', function(e) {
        var x, y;
        x = e.layerX;
        y = e.layerY;
        if (x > 260 && x < 310 && y > 290 && y < 400) {
          bubblage += 1;
          if (bubblage % 2 === 0) {
            return bubbles(x + randumb(25), y + randumb(25));
          }
        }
      });
    };
    jakeImg.onload = function() {
      var jake;
      jake = new Kinetic.Image({
        x: 0,
        y: 0,
        image: jakeImg,
        width: 600,
        height: 600
      });
      background.add(jake);
      stage.add(background);
      stage.add(bubbleLayer);
      stage.add(images);
      return images.draw();
    };
    jakeImg.src = 'imgs/jakespit.png';
    return soapImg.src = 'imgs/soap.png';
  };

  bubbleLayer = new Kinetic.Layer();

  msgArray = ["There's 4 more in there, get them out please!", "Ew, keep scrubbing the illusions of self away!", "Almost there two more left buddy, I really appreciate it!", "My pits are reaching spiritual purity!", "Way to go trooper, the password is `satori`"];

  bubbles = function(x, y) {
    var anim, bubble, dur, snailImg;
    if (bubblage % 300 === 0) {
      snailCount++;
      $('audio#zap').trigger('play');
      dur = snailCount !== 5 ? 4 : -1;
      message("" + snailCount + "/5", msgArray[snailCount - 1], dur);
      if (snailCount === 5) {
        snailCount = 0;
        $('audio').trigger('pause');
        $('audio#menu-loop').trigger('play');
        $('div#pits').fadeOut(400, function() {
          return $('div#pits').empty();
        });
      }
      snailImg = new Image();
      snailImg.onload = function() {
        var angularSpeed, anim, snail;
        snail = new Kinetic.Image({
          x: x,
          y: y,
          image: snailImg,
          width: 77,
          height: 71
        });
        bubbleLayer.add(snail);
        angularSpeed = Math.PI / 2;
        anim = new Kinetic.Animation({
          func: function(frame) {
            var angleDiff;
            snail.setY(snail.attrs.y + Math.round(frame.time / 200));
            angleDiff = frame.timeDiff * angularSpeed / 600;
            snail.rotate(angleDiff);
            if (snail.attrs.y > 700) {
              anim.stop();
              return bubbleLayer.remove(snail);
            }
          },
          node: bubbleLayer
        });
        return anim.start();
      };
      snailImg.src = 'imgs/snail_thumb.png';
    }
    bubble = new Kinetic.Circle({
      x: x,
      y: y,
      radius: (Math.random() * 10) + 3,
      fill: "#C5EEF6",
      stroke: "#FFF",
      strokeWidth: 2,
      opacity: Math.random() * .8 + .1
    });
    bubbleLayer.add(bubble);
    bubbleLayer.draw();
    anim = new Kinetic.Animation({
      func: function(frame) {
        bubble.setY(bubble.attrs.y + Math.round(frame.time / 1000));
        if (bubble.attrs.y > 600) {
          anim.stop();
          return bubbleLayer.remove(bubble);
        }
      },
      node: bubbleLayer
    });
    return anim.start();
  };

  window.enterSatori = function() {
    var jake;
    $("audio").trigger("pause");
    $("audio#satori").trigger("play");
    $("audio#menu-loop").trigger("play");
    $("audio#end-loop").trigger("play");
    $("div#menu").fadeOut(200);
    $("div#password-div").fadeOut(200);
    $("body").css("background-color", "#170033");
    jake = $("img#sitting-jake");
    jake.css("z-index", "-10");
    randJakeFloat();
    wormDance();
    return setTimeout(function() {
      return message("Thanks for Playing!", "I hope this game guided you closer to glob, feel free to email me <a href='mailto:uberscientist@gmail.com'>uberscientist@gmail.com</a>.", 10);
    }, 10 * 1000);
  };

  getRand = function() {
    var coord, jake, randLeft, randTop, wh, ww;
    jake = $("img#sitting-jake");
    ww = $(window).width();
    wh = $(window).height();
    randLeft = Math.random() * ww;
    randTop = Math.random() * wh;
    randLeft = randLeft > ww - jake.width() ? randLeft - jake.width() : randLeft;
    randTop = randTop > wh - jake.height() ? randTop - jake.height() : randTop;
    return coord = [randLeft, randTop];
  };

  randJakeFloat = function() {
    var blur, jake, newpos;
    blur = 0;
    jake = $("img#sitting-jake");
    return newpos = setInterval(function() {
      var rnd;
      rnd = getRand();
      blur++;
      jake.css('-webkit-filter', "blur(" + blur + "px)").css('-moz-filter', "blur(" + blur + "px)");
      return jake.animate({
        'width': jake.width() - jake.width() / 10,
        'height': jake.height() - jake.height() / 10
      }, 5000).animate({
        'left': rnd[0],
        'top': rnd[1]
      }, 5000);
    }, 7000);
  };

  $("img.satori-sprite").live('mouseover', function() {
    $(this).animate({
      'top': $(window).height() + 300
    }, 1500);
    return $(this).unbind('mouseover');
  });

  danceType = 0;

  dance = function() {
    var columnLen, dir, j, leftOffset, rowLen, sh, spriteArray, spriteContainer, sw, topOffset, wh, ww, _i, _j, _results;
    danceType = danceType > 4 ? 0 : danceType;
    spriteContainer = $("#sprites");
    spriteContainer.empty();
    ww = $(window).width();
    wh = $(window).height();
    dir = 'r';
    spriteArray = ["worm_crawl_" + dir + ".gif", "worm_bite_" + dir + ".gif", "snail_thumb.png", "soap.png", "jake_meditate.svg"];
    i = 0;
    spriteContainer.append("<img id='" + i + "' class='satori-sprite' src='imgs/" + spriteArray[danceType] + "' />");
    sw = $("#" + i).width();
    sh = $("#" + i).height();
    $("#" + i).remove();
    rowLen = Math.round(ww / sw) + 1;
    columnLen = Math.round(wh / sh) + 1;
    topOffset = 0;
    _results = [];
    for (i = _i = 1; 1 <= columnLen ? _i <= columnLen : _i >= columnLen; i = 1 <= columnLen ? ++_i : --_i) {
      leftOffset = 0;
      for (j = _j = 1; 1 <= rowLen ? _j <= rowLen : _j >= rowLen; j = 1 <= rowLen ? ++_j : --_j) {
        if (Math.random() > .5) {
          dir = j % 2 === 0 ? 'r' : 'l';
        } else {
          dir = i % 2 === 0 ? 'r' : 'l';
        }
        spriteArray = ["worm_crawl_" + dir + ".gif", "worm_bite_" + dir + ".gif", "snail_thumb.png", "soap.png", "jake_meditate.svg"];
        spriteContainer.append("<img id='" + i + "-" + j + "' class='satori-sprite' src='imgs/" + spriteArray[danceType] + "' />");
        $("#" + i + "-" + j).css({
          'left': leftOffset,
          'top': topOffset
        });
        leftOffset += sw;
      }
      _results.push(topOffset += sh);
    }
    return _results;
  };

  wormDance = function() {
    var danceInterval;
    $("body").append("<div id='sprites'></div>");
    dance(4);
    return danceInterval = setInterval(function() {
      danceType++;
      return dance();
    }, 3000);
  };

}).call(this);
